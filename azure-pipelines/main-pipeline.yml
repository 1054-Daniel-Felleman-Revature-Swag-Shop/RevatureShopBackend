# The idea is to be inclusive of all source directories. (I.E. Commerce, Accounts, Eureka, Gateway, Inventory, Config, and Base(?))
# And using the Build.SourcesDirectory variable to set a condition that will set variables.
trigger:
  branches:
    include: 
    - devops_pipeline

    
variables:
- name: service
  value:
  ${{ if eq(variables['Build.SourcesDirectory'], './base') }}: base
  ${{ if eq(variables['Build.SourcesDirectory'], './config') }}: RevShopConfig
  ${{ if eq(variables['Build.SourcesDirectory'], './inventory') }}: inventory
  ${{ if eq(variables['Build.SourcesDirectory'], './eureka-server') }}: eureka-server
  ${{ if eq(variables['Build.SourcesDirectory'], './commerce') }}: RevShopCommerce
  ${{ if eq(variables['Build.SourcesDirectory'], './accounts') }}: RevShopAccounts
  ${{ if eq(variables['Build.SourcesDirectory'], './Spring-Cloud-Gateway') }}: spring-cloud-gateway

stages:
- stage: TestPipelineLogic
  displayName: Testing... testing...
  jobs:
  - job: Test
    steps:
    - script:  echo ${{ variables.service }}

  
# - template: ./build-test-stage-template.yml
#   parameters:
#     mavenPomFile: "./$(service)/pom.xml"
#     options: "-f $(service)/pom.xml"
#     targetPath: "./$(service)/target/$(service)-0.0.1-SNAPSHOT.jar"
#     artifact: $(service)
#     displayName: '${{ variables.service }} Build and Test'

# - template: ./docker-stage-template.yml
#   parameters:
#     stage: CommitImage
#     displayName: '${{ variables.service }} Image Build and Push to ACR/Dockerhub'
#     targetPath: './dockerize'
#     Dockerfile: 'dockerize/gateway.Dockerfile'
#     artifact: $(service)
#     tags: "$(Build.SourceVersion)"
#     repository: "team4revops/$(service)"

# - template: ./docker-stage-template.yml
#   parameters:
#     stage: LatestImage
#     displayName: '${{ variables.service }} Image Build and Push to ACR/Dockerhub'
#     targetPath: './dockerize'
#     Dockerfile: 'dockerize/gateway.Dockerfile'
#     artifact: $(service)
#     tags: latest
#     repository: "team4revops/$(service)"

# - template: ./helm-deploy-template.yml
#   parameters:
#     containerName: team4revops
#     imageName: $(service)
#     tag: latest
#     helmCommand: Upgrade
#     disableSvc1: quiz
#     disableSvc2: flashcard
#     activeSvc: gateway