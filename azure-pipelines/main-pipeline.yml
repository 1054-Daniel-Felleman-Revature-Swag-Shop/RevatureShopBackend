# The idea is to be inclusive of all source directories. (I.E. Commerce, Accounts, Eureka, Gateway, Inventory, Config, and Base(?))
# And using the  variable to set a condition that will set variables.

trigger:
  branches:
    include: 
    - devops_pipeline

# Set some variables with base value to be change by script.
variables:
  accounts: false
  base: false
  commerce: false
  config: false
  eureka-server: false
  inventory: false
  Spring-Cloud-Gateway: false

parameters:
- name: serviceConditions
  type: object
  default:
  - base:
    name: 'base'
    #value: false
  - accounts:
    name: 'accounts'
   # value: false
  - commerce:
    name: 'commerce'
    #value: false
  - config:
    name: 'config'
    #value: false
  - eureka-server:
    name: 'eureka-server'
   # value: false
  - inventory:
    name: 'inventory'
   # value: false
  - Spring-Cloud-Gateway:
    name: 'Spring-Cloud-Gateway'
    #value: false

stages:
- stage: BuildandTest
  displayName: Check Service Changes, Test and Build
  jobs:
  - job: CheckChanges
    steps:
   
      # This script will check the Repo for changes and store them in a variable updatedFiles.
      # The script will iterate over every object stored in updatedFiles to select paths with changes.
      # Pipeline variable will be updated from 'false' to 'True' if a change was made in that path.
      # This step controls which build tasks will be triggered.

    - task: PowerShell@2
      displayName: Checking Service Directories
      inputs:
        targetType: 'inline'
        script: |
          $updatedFiles = git diff HEAD HEAD~ --name-only
          $updatedFiles | ForEach-Object {
              Switch -Wildcard ($_ ) {
                  'accounts/*' { Write-Output "##vso[task.setvariable variable=accounts]True" }
                  'base/*' { Write-Output "##vso[task.setvariable variable=base]True" }
                  'commerce/*' { Write-Output "##vso[task.setvariable variable=commerce]True" }
                  'config/*' { Write-Output "##vso[task.setvariable variable=config]True" }
                  'eureka-server/*' { Write-Output "##vso[task.setvariable variable=eureka-server]True" }
                  'inventory/*' { Write-Output "##vso[task.setvariable variable=inventory]True" }
                  'Spring-Cloud-Gateway/*' { Write-Output "##vso[task.setvariable variable=Spring-Cloud-Gateway]True" }
              }
          }
    
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |   
          
          if ( $$(base) )
          {
              Write-Output "##vso[task.setvariable variable=accounts]True"
              Write-Output "##vso[task.setvariable variable=commerce]True"
              Write-Output "##vso[task.setvariable variable=inventory]True"
          }

      # Output Variables: If true, these are the services that will be built later in the pipeline.

    - ${{ each service in parameters.serviceConditions }}:
      - script: echo '${{ service.name }} has been updated - $(${{ service.name }})'
        displayName:  'Checking ${{ service.name }} - $(${{ service.name }})'
     
      - script: echo '${{ service.name }} building...'
        condition: eq(variables.$(${{ service.name }}), 'True')
        #condition: $[ eq('variables.${{ service.name }}', 'True')])
        displayName: Build Run
        
        # - template: ./azure-pipelines/azure-templates/build-template.yml
        #   parameters: 
        #     displayName: Testing and Building ${{ service.name }}
        #     mavenPomFile: "./${{ service.name }}/pom.xml"
        #     options:
        #     targetPath:
        #     artifact: ${{ service.name }}
        #     condition: 
#($[ <expression> ])
